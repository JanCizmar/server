name: Release

on:
  workflow_run:
    workflows: [ "Test" ]
    branches: [ "main", "release" ]
    types:
      - completed

jobs:
  main:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.workflow_run.head_branch }}
          fetch-depth: 0
      - run: git fetch

      - run: "env"

      - run: git status

      - uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'

      - name: Set git globals
        run: |
          git config --local user.email "machine@tolgee.io"
          git config --local user.name "Tolgee Machine"

      - name: Install node modules
        run: npm ci

      - name: Run get new version
        run: GITHUB_REF_NAME=${{ github.event.workflow_run.head_branch }} npm run release-dry

      - name: Set version property
        id: version
        run: echo ::set-output name=VERSION::$(test -e .VERSION && echo v$(cat .VERSION))

      - name: BootJar with version
        if: ${{ steps.version.outputs.VERSION != '' }}
        run: ./gradlew bootJar
        env:
          VERSION: ${{ steps.version.outputs.VERSION }}
          TOLGEE_API_KEY: ${{secrets.TOLGEE_API_KEY}}
          TOLGEE_API_URL: ${{secrets.TOLGEE_API_URL}}

      - name: Create docker image
        if: ${{ steps.version.outputs.VERSION != '' }}
        run: ./gradlew docker
        env:
          VERSION: ${{ steps.version.outputs.VERSION }}
          TOLGEE_API_KEY: ${{secrets.TOLGEE_API_KEY}}
          TOLGEE_API_URL: ${{secrets.TOLGEE_API_URL}}

      - name: Pack with webapp
        if: ${{ steps.version.outputs.VERSION != '' }}
        run: ./gradlew packResources
        env:
          VERSION: ${{ steps.version.outputs.VERSION }}
          TOLGEE_API_KEY: ${{secrets.TOLGEE_API_KEY}}
          TOLGEE_API_URL: ${{secrets.TOLGEE_API_URL}}

      - name: Run npm release
        if: ${{ steps.version.outputs.VERSION != '' }}
        run: npm run release
